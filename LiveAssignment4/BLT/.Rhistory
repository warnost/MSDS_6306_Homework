knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
ggplot(data, aes(x=Date, y=Value)) + geom_line() +
labs(title="US GDP 1947-Present, Billions of Dollars", x="Year", y="")
library(XML) #xml_Parse
library(tidyr)
library(stringi)
library(rvest) #html_table, html_node
library(ggplot2)
library(RCurl)
data <-getURL("https://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1")
doc <- xmlParse(data)
data <-getURL("https://www.imdb.com/title/tt0241527/fullcredits?ref_=tt_ql_1")
doc <- xmlParse(data)
data <- read_html("https://www.imdb.com/title/tt0241527/fullcredits?ref_=tt_ql_1")
data <- read_html("https://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1")
doc <- xmlParse(data)
doc <- xmlParseDoc(data)
doc <- htmlParse(data)
doc <- html_nodes(data)
data <-getURL("https://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1")
doc <- xmlParse(data)
data
url<-"https://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1"
hp<-read_html(url)
hp_nameR <- html_nodes(hp,"name")
hp_nameR
hp_nameR <- html_nodes(hp,"Actor")
hp_nameR
hp_nameR <- html_nodes(hp,"cast_list")
hp_nameR <- html_nodes(hp,"table")
hp_nameR[[5]]
hp_nameR[[6]]
hp_nameR[[3]]
html_table(hp_nameR[[3]])
as.data.frame(html_table(hp_nameR[[3]]))
head(as.data.frame(html_table(hp_nameR[[3]])))
str(head(as.data.frame(html_table(hp_nameR[[3]]))))
stuff_and_things <-as.data.frame(html_table(hp_nameR[[3]]))
table(stuff_and_things$X1)
table(stuff_and_things$X3)
View(stuff_and_things)
html_scrapper <- function(site, element){
read_html(site) %>%
html_nodes(hp,"table") %>%
.[[element]] -> out
return out
}
return out
library(tidyr)
read_html(site) %>% html_nodes(hp,"table") %>% .[[element]] -> out
html_scrapper(url,1)
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(hp,"table") %>% .[[element]] -> out
return out
}
out <- read_html(site) %>% html_nodes(hp,"table") %>% .[[element]]
html_scrapper <- function(site, element){
out <- read_html(site) %>% html_nodes(hp,"table") %>% .[[element]]
return out
}
?function
?function
return(out)
html_scrapper <- function(site, element){
out <- read_html(site) %>% html_nodes(hp,"table") %>% .[[element]]
return(out)
}
html_scrapper(url,1)
url<-"https://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1"
hp<-read_html(url)
out <- read_html(site) %>% html_nodes(.,"table") %>% .[[element]]
return(out)
html_scrapper <- function(site, element){
out <- read_html(site) %>% html_nodes(.,"table") %>% .[[element]]
return(out)
}
html_scrapper(url,1)
html_scrapper(url,2)
html_scrapper(url,3)
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table(.[[element]]) -> out
return(out)
}
html_scrapper(url,3)
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table %>%.[[element]] -> out
return(out)
}
html_scrapper(url,3)
library(tidyverse)
library(rvest)
url<-"https://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1"
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table %>%.[[element]] -> out
return(out)
}
html_scrapper(url,3)
cast_list <- html_scrapper(url,3)
cast_list <- html_scrapper(url,3) %>% mutate(ID,rowid_to_column())
str(cast_list)
?mutate
cast_list <- html_scrapper(url,3) %>% mutate(ID = rowid_to_column())
str(cast_list)
cast_list <- html_scrapper(url,3)
str(cast_list)
??humanize
install.packages("humanize")
?humanize
??humanize
install.packages("humaniformat")
library(humaniformat)
table(cast_list$X1)
table(cast_list$X3)
cast_list$X1 <- NULL
str(cast_list)
cast_list$X3 <- NULL
names(cast_list) <- c("Name","Role")
str(cast_list)
head(cast_list)
cast_list <- cast_list %>% na.omit
str(cast_list)
head(is.na(cast_list$Name))
cast_list <- cast_list %>% filter(Name == "")
str(cast_list)
cast_list <- cast_list %>% filter(Name != "")
str(cast_list)
cast_list <- html_scrapper(url,3)
cast_list$X1 <- NULL
cast_list$X3 <- NULL
names(cast_list) <- c("Name","Role")
cast_list <- cast_list %>% filter(Name != "")
str(cast_list)
View(cast_list)
cast_list <- cast_list %>% filter(Name != c("","Rest of cast listed alphabetically:"))
cast_list <- cast_list %>% filter(Name != "",Name !="Rest of cast listed alphabetically:")
str(cast_list)
parsed_names <- parse_names(cast_list$Name)
head(parsed_names)
View(parsed_names)
no_accents <- stri_trans_general(cast_list$Name,"Latin-ASCII")
parsed_names <- parse_names(no_accents)
head(parsed_names)
cast_list <- cast_list %>% mutate(FirstName = paste(parsed_names$first_name,parsed_names$middle_name))
head(cast_list)
?paste
cast_list <- cast_list %>% mutate(FirstName = paste0(parsed_names$first_name,parsed_names$middle_name))
head(cast_list)
firstName <- ifelse(is.na(parsed_names$middle_name),
parsed_names$first_name,
paste0(parsed_names$first_name,parsed_names$middle_name)
)
head(firstName)
head(firstName,30)
head(firstName,50)
head(firstName,80)
head(firstName,81)
firstName <- ifelse(is.na(parsed_names$middle_name),
parsed_names$first_name,
paste(parsed_names$first_name,parsed_names$middle_name)
)
head(firstName,81)
lastName <- parsed_names$last_name
cast_list_addNames <- cast_list %>% add_column(FirstName = firstName, Surname = lastName)
#This function scrapes websites for tables, then looks at a specific element
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table %>%.[[element]] -> out
return(out)
}
cast_list <- html_scrapper(url,3)
str(cast_list)
table(cast_list$X1)
table(cast_list$X3)
cast_list$X1 <- NULL
cast_list$X3 <- NULL
names(cast_list) <- c("Actor","Character")
str(cast_list)
head(cast_list)
cast_list_filtered <- cast_list %>% filter(Actor != "",Actor !="Rest of cast listed alphabetically:")
str(cast_list)
cast_list_filtered <- cast_list %>% filter(Actor != "",Actor !="Rest of cast listed alphabetically:")
str(cast_list_filtered)
no_accents <- stri_trans_general(cast_list_filtered$Actor,"Latin-ASCII")
parsed_names <- parse_names(no_accents)
head(parsed_names)
firstName <- ifelse(is.na(parsed_names$middle_name),
parsed_names$first_name,
paste(parsed_names$first_name,parsed_names$middle_name)
)
lastName <- parsed_names$last_name
cast_list_addNames <- cast_list_filtered %>% add_column(FirstName = firstName, Surname = lastName)
head(cast_list)
head(cast_list_addNames)
cast_list_final <- cast_list_addNames %>% select(FirstName, Surname, Character)
head(cast_list_final,10)
View(cast_list_final)
head(cast_list_filtered)
head(cast_list_filtered,10)
cast_list_filtered$Character <- str_squish(cast_list_filtered$Character)
head(cast_list_filtered,10)
no_accents <- stri_trans_general(cast_list_filtered$Actor,"Latin-ASCII")
parsed_names <- parse_names(no_accents)
head(parsed_names)
firstName <- ifelse(is.na(parsed_names$middle_name),
parsed_names$first_name,
paste(parsed_names$first_name,parsed_names$middle_name)
)
lastName <- parsed_names$last_name
cast_list_addNames <- cast_list_filtered %>% add_column(FirstName = firstName, Surname = lastName)
head(cast_list_addNames)
cast_list_final <- cast_list_addNames %>% select(FirstName, Surname, Character)
head(cast_list_final,10)
library(tidyverse)
library(rvest)
library(humaniformat)
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table %>%.[[element]] -> out
return(out)
}
###ESPN
url <- "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
shooting_stats <- html_scrapper(url,3)
shooting_stats <- html_scrapper(url,2)
shooting_stats <- html_scrapper(url,1)
x1 <- read_html(url)
x2 <- html_nodes(x1,"table")
x2[1]
x2[2]
x2[3]
html_table(x2)
html_table(x2[3])
x2[3]
x2 <- html_nodes(x1,"table")
x3 <- html_table(x2,fill = TRUE)
x3
x3[1]
x3 <- html_table(x2, header = TRUE, fill = TRUE)
x3[1]
x3 <- html_table(x2, fill = TRUE)
x3[[1]]
x3[[2]]
x3[[3]]
x3[[4]]
x3[[5]]
x3[[6]]
x3[[7]]
x3[[8]]
x3[8]
x3[6]
shooting_stats <- cbind(names, stats)
stats <-x3[8]
names <-x3[6]
shooting_stats <- cbind(names, stats)
head(shooting_stats)
shooting_stats <- cbind(as.character(names), as.numeric(stats))
head(shooting_stats)
shooting_stats <- cbind(as.character(names), as.numeric(unlist(stats)))
head(shooting_stats)
unlist(names)
as.character(unlist(names))
players <- as.character(unlist(x3[6]))
unlist(stats)
as.data.frame(x[8])
as.data.frame(x3[8])
str(as.data.frame(x3[8]))
as.data.frame(x3[6])
stats <- data.frame(x3[8])
players <- data.frame(x3[6])
shooting_stats <- cbind(players,stats)
head(shooting_stats)
shooting_stats
shooting_stats <- cbind(players,stats) %>% filter(Name == "Total")
shooting_stats
shooting_stats <- cbind(players,stats) %>% filter(Name != "Total")
shooting_stats
names(players) <- "Player"
shooting_stats <- cbind(players,stats) %>% filter(Name != "Total")
shooting_stats <- cbind(players,stats) %>% filter(Player != "Total")
?woprd
?word
shooting_stats$Name = word(shooting_stats$Player,1,-1)
shooting_stats
shooting_stats$Name = word(shooting_stats$Player,1,-2)
shooting_stats
shooting_stats$Position = word(shooting_stats$Player,-1,-1)
shooting_stats
shooting_stats_final <- shooting_stats %>% select(Name,Position,2:14)
View(shooting_stats_final)
str(shooting_stats_final)
?html_table
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar()
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar(stat = "identity")
shooting_stats_final <- shooting_stats %>% select(Name,Position,2:14) %>% arrange(Position)
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar(stat = "identity")
str(shooting_stats_final)
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar(stat = "identity")
?reorder
ggplot(shooting_stats_final,aes(x=reorder(Name,Position), y=FG., fill=Position)) + geom_bar(stat = "identity")
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip()
ggplot(shooting_stats_final,aes(x=reorder(Name,-FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip() +theme_few()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip() + theme_few() + scale_colour_few()
library(ggthemes)
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip() + theme_few() + scale_colour_few()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_economist() +
scale_colour_few()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_fivethirtyeight()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs")
?ggtitle
theme_fivethirtyeight(plot.title = element_text(hjust = 0.5))
theme_fivethirtyeight(plot.title = element_text(hjust = 0.5))
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_clean()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_dark()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1)) +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1)) +
theme_fivethirtyeight()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1)) +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1)) +
theme_few()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1))
??stri_trans
ls
list.files()
pwd
list.dirs()
setwd("C:/Users/William/OneDrive/MSDS_6306_DoingDataScience/MSDS_6306_Homework/LiveAssignment4/BLT")
url <- "https://data.boston.gov/dataset/652762e9-2556-47cd-8e80-798546992a57/resource/87c759ee-63b9-4aec-a00b-bba1672a20ef/download/tmp1i7dwh_5.csv"
download.file(url, destfile = "libraryElectric.csv")
source('~/.active-rstudio-document', echo=TRUE)
libraryElectric<- read_csv("libraryElectric.csv")
str(libraryElectric)
dim(libraryElectric)
names(libraryElectric)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
url <- "https://data.boston.gov/dataset/652762e9-2556-47cd-8e80-798546992a57/resource/87c759ee-63b9-4aec-a00b-bba1672a20ef/download/tmp1i7dwh_5.csv"
download.file(url, destfile = "libraryElectric.csv")
libraryElectric<- read_csv("libraryElectric.csv")
dim(libraryElectric)
names(libraryElectric)
library(tidyverse)
url <- "https://data.boston.gov/dataset/652762e9-2556-47cd-8e80-798546992a57/resource/87c759ee-63b9-4aec-a00b-bba1672a20ef/download/tmp1i7dwh_5.csv"
download.file(url, destfile = "libraryElectric.csv")
libraryElectric<- read_csv("libraryElectric.csv")
dim(libraryElectric)
names(libraryElectric)
str(libraryElectric)
library(tidyverse)
url <- "https://data.boston.gov/dataset/652762e9-2556-47cd-8e80-798546992a57/resource/87c759ee-63b9-4aec-a00b-bba1672a20ef/download/tmp1i7dwh_5.csv"
download.file(url, destfile = "libraryElectric.csv")
libraryElectric<- read_csv("libraryElectric.csv")
dim(libraryElectric)
names(libraryElectric)
class(libraryElectric)
library(tidyverse)
url <- "https://data.boston.gov/dataset/652762e9-2556-47cd-8e80-798546992a57/resource/87c759ee-63b9-4aec-a00b-bba1672a20ef/download/tmp1i7dwh_5.csv"
download.file(url, destfile = "libraryElectric.csv")
libraryElectric<- read_csv("libraryElectric.csv")
dim(libraryElectric)
names(libraryElectric)
sapply(libraryElectric,class)
library(tidyverse)
url <- "https://data.boston.gov/dataset/652762e9-2556-47cd-8e80-798546992a57/resource/87c759ee-63b9-4aec-a00b-bba1672a20ef/download/tmp1i7dwh_5.csv"
download.file(url, destfile = "libraryElectric.csv")
libraryElectric<- read_csv("libraryElectric.csv")
dim(libraryElectric)
names(libraryElectric)
sapply(libraryElectric,typeof)
install.packages("downloader")
library(downloader)
url<-"https://github.com/thoughtfulbloke/faoexample/blob/master/appleorange.csv"
download(url, "appleorange.csv")
list.files()
ao <- read_csv("appleorange.csv")
ao <- read_csv("appleorange.csv")
str(ao)
View(ao)
url<-"https://github.com/thoughtfulbloke/faoexample/master/appleorange.csv"
download(url, "appleorange.csv")
download(url, "appleorange.csv")
url<-"https://raw.githubusercontent.com/thoughtfulbloke/faoexample/master/appleorange.csv"
download(url, "appleorange.csv")
list.files()
ao <- read_csv("appleorange.csv")
str(ao)
View(ao)
?read_csv
ao <- read_csv("appleorange.csv", col_names = FALSE)
str(ao)
ao <- read_csv("appleorange.csv")
str(ao)
?delete
ao %>% filter(`FAOSTAT 2013` in c("Myanmar","Suriname","Turkministan","Chad"))
ao %>% filter(`FAOSTAT 2013` == c("Myanmar","Suriname","Turkministan","Chad"))
?filter
ao %>% filter(`FAOSTAT 2013` %in% c("Myanmar","Suriname","Turkministan","Chad"))
ao %>% filter(`FAOSTAT 2013` %in% c("Myanmar","Suriname","Turkmenistan","Chad"))
