html_scrapper(url,1)
url<-"https://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1"
hp<-read_html(url)
out <- read_html(site) %>% html_nodes(.,"table") %>% .[[element]]
return(out)
html_scrapper <- function(site, element){
out <- read_html(site) %>% html_nodes(.,"table") %>% .[[element]]
return(out)
}
html_scrapper(url,1)
html_scrapper(url,2)
html_scrapper(url,3)
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table(.[[element]]) -> out
return(out)
}
html_scrapper(url,3)
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table %>%.[[element]] -> out
return(out)
}
html_scrapper(url,3)
library(tidyverse)
library(rvest)
url<-"https://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1"
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table %>%.[[element]] -> out
return(out)
}
html_scrapper(url,3)
cast_list <- html_scrapper(url,3)
cast_list <- html_scrapper(url,3) %>% mutate(ID,rowid_to_column())
str(cast_list)
?mutate
cast_list <- html_scrapper(url,3) %>% mutate(ID = rowid_to_column())
str(cast_list)
cast_list <- html_scrapper(url,3)
str(cast_list)
??humanize
install.packages("humanize")
?humanize
??humanize
install.packages("humaniformat")
library(humaniformat)
table(cast_list$X1)
table(cast_list$X3)
cast_list$X1 <- NULL
str(cast_list)
cast_list$X3 <- NULL
names(cast_list) <- c("Name","Role")
str(cast_list)
head(cast_list)
cast_list <- cast_list %>% na.omit
str(cast_list)
head(is.na(cast_list$Name))
cast_list <- cast_list %>% filter(Name == "")
str(cast_list)
cast_list <- cast_list %>% filter(Name != "")
str(cast_list)
cast_list <- html_scrapper(url,3)
cast_list$X1 <- NULL
cast_list$X3 <- NULL
names(cast_list) <- c("Name","Role")
cast_list <- cast_list %>% filter(Name != "")
str(cast_list)
View(cast_list)
cast_list <- cast_list %>% filter(Name != c("","Rest of cast listed alphabetically:"))
cast_list <- cast_list %>% filter(Name != "",Name !="Rest of cast listed alphabetically:")
str(cast_list)
parsed_names <- parse_names(cast_list$Name)
head(parsed_names)
View(parsed_names)
no_accents <- stri_trans_general(cast_list$Name,"Latin-ASCII")
parsed_names <- parse_names(no_accents)
head(parsed_names)
cast_list <- cast_list %>% mutate(FirstName = paste(parsed_names$first_name,parsed_names$middle_name))
head(cast_list)
?paste
cast_list <- cast_list %>% mutate(FirstName = paste0(parsed_names$first_name,parsed_names$middle_name))
head(cast_list)
firstName <- ifelse(is.na(parsed_names$middle_name),
parsed_names$first_name,
paste0(parsed_names$first_name,parsed_names$middle_name)
)
head(firstName)
head(firstName,30)
head(firstName,50)
head(firstName,80)
head(firstName,81)
firstName <- ifelse(is.na(parsed_names$middle_name),
parsed_names$first_name,
paste(parsed_names$first_name,parsed_names$middle_name)
)
head(firstName,81)
lastName <- parsed_names$last_name
cast_list_addNames <- cast_list %>% add_column(FirstName = firstName, Surname = lastName)
#This function scrapes websites for tables, then looks at a specific element
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table %>%.[[element]] -> out
return(out)
}
cast_list <- html_scrapper(url,3)
str(cast_list)
table(cast_list$X1)
table(cast_list$X3)
cast_list$X1 <- NULL
cast_list$X3 <- NULL
names(cast_list) <- c("Actor","Character")
str(cast_list)
head(cast_list)
cast_list_filtered <- cast_list %>% filter(Actor != "",Actor !="Rest of cast listed alphabetically:")
str(cast_list)
cast_list_filtered <- cast_list %>% filter(Actor != "",Actor !="Rest of cast listed alphabetically:")
str(cast_list_filtered)
no_accents <- stri_trans_general(cast_list_filtered$Actor,"Latin-ASCII")
parsed_names <- parse_names(no_accents)
head(parsed_names)
firstName <- ifelse(is.na(parsed_names$middle_name),
parsed_names$first_name,
paste(parsed_names$first_name,parsed_names$middle_name)
)
lastName <- parsed_names$last_name
cast_list_addNames <- cast_list_filtered %>% add_column(FirstName = firstName, Surname = lastName)
head(cast_list)
head(cast_list_addNames)
cast_list_final <- cast_list_addNames %>% select(FirstName, Surname, Character)
head(cast_list_final,10)
View(cast_list_final)
head(cast_list_filtered)
head(cast_list_filtered,10)
cast_list_filtered$Character <- str_squish(cast_list_filtered$Character)
head(cast_list_filtered,10)
no_accents <- stri_trans_general(cast_list_filtered$Actor,"Latin-ASCII")
parsed_names <- parse_names(no_accents)
head(parsed_names)
firstName <- ifelse(is.na(parsed_names$middle_name),
parsed_names$first_name,
paste(parsed_names$first_name,parsed_names$middle_name)
)
lastName <- parsed_names$last_name
cast_list_addNames <- cast_list_filtered %>% add_column(FirstName = firstName, Surname = lastName)
head(cast_list_addNames)
cast_list_final <- cast_list_addNames %>% select(FirstName, Surname, Character)
head(cast_list_final,10)
library(tidyverse)
library(rvest)
library(humaniformat)
html_scrapper <- function(site, element){
read_html(site) %>% html_nodes(.,"table") %>% html_table %>%.[[element]] -> out
return(out)
}
###ESPN
url <- "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
shooting_stats <- html_scrapper(url,3)
shooting_stats <- html_scrapper(url,2)
shooting_stats <- html_scrapper(url,1)
x1 <- read_html(url)
x2 <- html_nodes(x1,"table")
x2[1]
x2[2]
x2[3]
html_table(x2)
html_table(x2[3])
x2[3]
x2 <- html_nodes(x1,"table")
x3 <- html_table(x2,fill = TRUE)
x3
x3[1]
x3 <- html_table(x2, header = TRUE, fill = TRUE)
x3[1]
x3 <- html_table(x2, fill = TRUE)
x3[[1]]
x3[[2]]
x3[[3]]
x3[[4]]
x3[[5]]
x3[[6]]
x3[[7]]
x3[[8]]
x3[8]
x3[6]
shooting_stats <- cbind(names, stats)
stats <-x3[8]
names <-x3[6]
shooting_stats <- cbind(names, stats)
head(shooting_stats)
shooting_stats <- cbind(as.character(names), as.numeric(stats))
head(shooting_stats)
shooting_stats <- cbind(as.character(names), as.numeric(unlist(stats)))
head(shooting_stats)
unlist(names)
as.character(unlist(names))
players <- as.character(unlist(x3[6]))
unlist(stats)
as.data.frame(x[8])
as.data.frame(x3[8])
str(as.data.frame(x3[8]))
as.data.frame(x3[6])
stats <- data.frame(x3[8])
players <- data.frame(x3[6])
shooting_stats <- cbind(players,stats)
head(shooting_stats)
shooting_stats
shooting_stats <- cbind(players,stats) %>% filter(Name == "Total")
shooting_stats
shooting_stats <- cbind(players,stats) %>% filter(Name != "Total")
shooting_stats
names(players) <- "Player"
shooting_stats <- cbind(players,stats) %>% filter(Name != "Total")
shooting_stats <- cbind(players,stats) %>% filter(Player != "Total")
?woprd
?word
shooting_stats$Name = word(shooting_stats$Player,1,-1)
shooting_stats
shooting_stats$Name = word(shooting_stats$Player,1,-2)
shooting_stats
shooting_stats$Position = word(shooting_stats$Player,-1,-1)
shooting_stats
shooting_stats_final <- shooting_stats %>% select(Name,Position,2:14)
View(shooting_stats_final)
str(shooting_stats_final)
?html_table
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar()
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar(stat = "identity")
shooting_stats_final <- shooting_stats %>% select(Name,Position,2:14) %>% arrange(Position)
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar(stat = "identity")
str(shooting_stats_final)
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar(stat = "identity")
?reorder
ggplot(shooting_stats_final,aes(x=reorder(Name,Position), y=FG., fill=Position)) + geom_bar(stat = "identity")
ggplot(shooting_stats_final,aes(x=Name, y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip()
ggplot(shooting_stats_final,aes(x=reorder(Name,-FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip() +theme_few()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip() + theme_few() + scale_colour_few()
library(ggthemes)
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) + geom_bar(stat = "identity") + coord_flip() + theme_few() + scale_colour_few()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_economist() +
scale_colour_few()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_fivethirtyeight()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs")
?ggtitle
theme_fivethirtyeight(plot.title = element_text(hjust = 0.5))
theme_fivethirtyeight(plot.title = element_text(hjust = 0.5))
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme_fivethirtyeight() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_clean()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_dark()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
xlab("Field Goals Percentage Per Game") +
ylab("Player Name") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1)) +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1))
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1)) +
theme_fivethirtyeight()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1)) +
theme_economist()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1)) +
theme_few()
ggplot(shooting_stats_final,aes(x=reorder(Name,FG.), y=FG., fill=Position)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Field Goals Percentage Per Game for the San Antonio Spurs") +
ylab("Field Goals Percentage Per Game") +
xlab("Player Name") +
theme(plot.title = element_text(hjust = 0.5),axis.title.y=element_text(angle=0,vjust=1))
??stri_trans
strings <- c("a", "ab", "acb", "accb", "acccb", "accccb")
grep("ac*b", strings, value = TRUE) # * = 0 or more
install.packages("nycflights13")
data(flights)
library(nycflights13)
data("flights")
data("weather")
str(flights)
str(weather)
flight_weather <- flights %>% left_join(weather,by="time_hour")
library(tidyverse)
flight_weather <- flights %>% left_join(weather,by="time_hour")
ggplot(flight_weather,aes(x=visib,y=arr_delay)) + geom_point()
?weather
ggplot(flight_weather,aes(x=visib,y=arr_delay)) + geom_boxplot()
ggplot(flight_weather,aes(group=visib,y=arr_delay)) + geom_boxplot()
flight_weather <- flights %>% left_join(weather)
ggplot(flight_weather,aes(group=visib,y=arr_delay)) + geom_boxplot()
ggplot(flight_weather,aes(x=visib,y=arr_delay)) + geom_point()
strings <- c("a", "ab", "acb", "accb", "acccb", "accccb","bccca")
grep("ac*b", strings, value = TRUE) # * = 0 or more
## [1] "ab"     "acb"    "accb"   "acccb"  "accccb"
grep("ac+b", strings, value = TRUE) # + = 1 or more
## [1] "acb"    "accb"   "acccb"  "accccb"
grep("ac?b", strings, value = TRUE) # ? 0 or 1
## [1] "cdab"
grep("(^c)d?", strings, value = TRUE)  # what will this return?
strings <- c("abcd", "cdab", "cabd", "c abd", "cabdd")
## [1] "cdab"
grep("(^c)d?", strings, value = TRUE)  # what will this return?
grep("(^c)d+", strings, value = TRUE)  # what will this return?
test<-inner_join(flights, weather, by.x = "dest", by.y = "origin")
View(test)
?inner_join
?merge
library(tidyverse)
#fileLocation <- "https://raw.githubusercontent.com/BivinSadler/MSDS-6306-Doing-Data-Science/master/Unit%206/nyt13.csv"
fileLocation <- "http://stat.columbia.edu/~rachel/datasets/nyt12.csv"
nytData <- read.csv(url(fileLocation))
head(nytData)
#stratified Age groups
str(nytData)
nytData$ageGroup <- cut(nytData$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
?cut
levels(nytData$ageGroup) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
head(nytData)
str(nytData)
#Transform gender to a factor variable
nytData$Gender = factor(nytData$Gender, levels=c(1,0), labels = c("male", "female"))
head(nytData)
#plot ageGroup and impressions
ggplot(data=nytData, aes(x=ageGroup, y=Impressions, fill=ageGroup)) + geom_bar(stat="identity") + theme_bw()
source('C:/Users/William/OneDrive/MSDS_6306_DoingDataScience/LiveCoding_Unit6+ BreakOut Summer 2019 BO1 Only.R', echo=TRUE)
#fileLocation <- "https://raw.githubusercontent.com/BivinSadler/MSDS-6306-Doing-Data-Science/master/Unit%206/nyt1.csv"
fileLocation <- "http://stat.columbia.edu/~rachel/datasets/nyt2.csv"
nytData <- read.csv(url(fileLocation))
head(nytData)
fileLocation <- "https://raw.githubusercontent.com/BivinSadler/MSDS-6306-Doing-Data-Science/master/Unit%206/nyt1.csv"
nytData <- read.csv(url(fileLocation))
head(nytData)
nytData$CTR = nytData$Clicks/nytData$Impressions
#dplyr
nytData = nytData %>% mutate(CTR = Clicks / Impressions)
head(nytData)
#stratified Age groups
str(nytData)
nytData$ageGroup <- cut(nytData$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
levels(nytData$ageGroup) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
head(nytData)
str(nytData)
#Transform gender to a factor variable
nytData$Gender = factor(nytData$Gender, levels=c(1,0), labels = c("male", "female"))
head(nytData)
#histograms of Gender and CTR
nytData %>% filter(CTR > 0) %>% filter(Signed_In == 1) %>% ggplot(aes(CTR)) + facet_wrap(~Gender) + geom_histogram()
#boxplots for CTR
nytData %>% filter(CTR > 0) %>% filter(Signed_In == 1) %>% ggplot(aes(CTR)) + geom_boxplot(aes(Gender, CTR))
#Both distibutions of CTR looked right skewed although the sample size should be sufficient to invoke the CLT.
#There is not strong visual evidence against equal standard deviation
# We will assume independence
# T-Test for CTR v. Gender
t.test(CTR~Gender, data = filter(nytData, CTR > 0 & Signed_In == 1), var.equal= TRUE)
library(tidyverse)
setwd("C:/Users/William/OneDrive/MSDS_6306_DoingDataScience/MSDS_6306_Homework/LiveAssignment6")
load("./dataFiles/N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda")
names(mh2015_puf)
levels(mh2015_puf$LST)
names(mh2015_puf)
levels(mh2015_puf$LST)
exclude <- c("HI","PR","VI","GU","AK","AS","FM","MH","MP","PW")
?fig.width
??fig.width
knitr::opts_chunk$set(echo = TRUE)
statesize <- read_csv("./dataFiles/statesize.csv")
head(statesize)
paste(state_counts$State)
exclude <- c("HI","PR","VI","GU","AK","AS","FM","MH","MP","PW")
mainland <- mh2015_puf %>% filter(!(str_squish(LST) %in% exclude))
state_counts <- as.data.frame(mainland %>% count(LST))
names(state_counts) <- c("State", "Count")
statesize <- read_csv("./dataFiles/statesize.csv")
head(statesize)
paste(state_counts$State)
install.packages("rmdformats")
install.packages("rmdformats")
install.packages("rmdformats")
install.packages("rmdformats")
?opts_chunk
library(knitr)
library(tidyverse)
setwd("C:/Users/William/OneDrive/MSDS_6306_DoingDataScience/MSDS_6306_Homework/LiveAssignment6")
load("./dataFiles/N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda")
View(mh2015_puf)
table(mh2015_puf$FACILITYTYPE)
exclude <- c("HI","PR","VI","GU","AK","AS","FM","MH","MP","PW")
mainland <- mh2015_puf %>% filter(!(str_squish(LST) %in% exclude), FACILITYTYPE == "Veterans Administration medical center (VAMC) or other VA health care facility")
state_counts <- as.data.frame(mainland %>% count(LST))
names(state_counts) <- c("State", "Count")
exclude <- c("HI","PR","VI","GU","AK","AS","FM","MH","MP","PW")
mainland <- mh2015_puf %>% filter(!(str_squish(LST) %in% exclude)#, FACILITYTYPE == "Veterans Administration medical center (VAMC) or other VA health care facility")
state_counts <- as.data.frame(mainland %>% count(LST))
exclude <- c("HI","PR","VI","GU","AK","AS","FM","MH","MP","PW")
mainland <- mh2015_puf %>% filter(!(str_squish(LST) %in% exclude) #, FACILITYTYPE == "Veterans Administration medical center (VAMC) or other VA health care facility")
state_counts <- as.data.frame(mainland %>% count(LST))
library(knitr)
library(tidyverse)
setwd("C:/Users/William/OneDrive/MSDS_6306_DoingDataScience/MSDS_6306_Homework/LiveAssignment6")
load("./dataFiles/N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda")
levels(mh2015_puf$LST)
exclude <- c("HI","PR","VI","GU","AK","AS","FM","MH","MP","PW")
mainland <- mh2015_puf %>% filter(!(str_squish(LST) %in% exclude) #, FACILITYTYPE == "Veterans Administration medical center (VAMC) or other VA health care facility")
state_counts <- as.data.frame(mainland %>% count(LST))
exclude <- c("HI","PR","VI","GU","AK","AS","FM","MH","MP","PW")
mainland <- mh2015_puf %>% filter(!(str_squish(LST) %in% exclude)
state_counts <- as.data.frame(mainland %>% count(LST))
exclude <- c("HI","PR","VI","GU","AK","AS","FM","MH","MP","PW")
mainland <- mh2015_puf %>% filter(!(str_squish(LST) %in% exclude))
state_counts <- as.data.frame(mainland %>% count(LST))
names(state_counts) <- c("State", "Count")
exclude <- c("HI","PR","VI","GU","AK","AS","FM","MH","MP","PW")
mainland <- mh2015_puf %>% filter(!(str_squish(LST) %in% exclude), FACILITYTYPE == "Veterans Administration medical center (VAMC) or other VA health care facility")
state_counts <- as.data.frame(mainland %>% count(LST))
names(state_counts) <- c("State", "Count")
library(knitr)
